// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VideoDownloaderTelegramBot.Db.Data;

#nullable disable

namespace VideoDownloaderTelegramBot.Migrations.Migrations
{
    [DbContext(typeof(VideoDownloaderDbContext))]
    [Migration("20251002014414_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.9");

            modelBuilder.Entity("VideoDownloaderTelegramBot.Db.Entities.FileAccessToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ExpiresAt")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UsedAt")
                        .HasColumnType("TEXT");

                    b.Property<int>("VideoFileId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ExpiresAt");

                    b.HasIndex("IsUsed");

                    b.HasIndex("Token")
                        .IsUnique();

                    b.HasIndex("VideoFileId");

                    b.ToTable("FileAccessTokens");
                });

            modelBuilder.Entity("VideoDownloaderTelegramBot.Db.Entities.VideoFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ContentType")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ExpiresAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("FileId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<long>("FileSizeBytes")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SourceUrl")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("TEXT");

                    b.Property<long>("TelegramUserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ExpiresAt");

                    b.HasIndex("FileId")
                        .IsUnique();

                    b.HasIndex("IsDeleted");

                    b.HasIndex("TelegramUserId");

                    b.ToTable("VideoFiles");
                });

            modelBuilder.Entity("VideoDownloaderTelegramBot.Db.Entities.FileAccessToken", b =>
                {
                    b.HasOne("VideoDownloaderTelegramBot.Db.Entities.VideoFile", "VideoFile")
                        .WithMany("AccessTokens")
                        .HasForeignKey("VideoFileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("VideoFile");
                });

            modelBuilder.Entity("VideoDownloaderTelegramBot.Db.Entities.VideoFile", b =>
                {
                    b.Navigation("AccessTokens");
                });
#pragma warning restore 612, 618
        }
    }
}
